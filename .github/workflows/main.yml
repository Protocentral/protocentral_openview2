#The name of your workflow.
name: Build the app for desktop
# Trigger the workflow on push or pull request
on:
  push:
    tags:
      - '*'
jobs:
  build-and-release-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.29.1'
          channel: 'stable'
      - name: update dependencies
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Install project dependencies
        run: flutter pub get
      #- name: Generate intermediates
      #  run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable linux build
        run: flutter config --enable-linux-desktop
      - name: Build artifacts
        run: flutter build linux --release
      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: OpenView2-linux.zip
          directory: build/linux/x64/release/bundle
      - name: Linux Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/linux/x64/release/bundle/OpenView2-linux.zip
  build-and-release-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '3.29.1'
      - name: Install project dependencies
        run: flutter pub get
      #- name: Generate intermediates
      #  run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: OpenView2-windows.zip
          directory: build/windows/x64/runner/Release
      - name: Windows Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/windows/x64/runner/Release/OpenView2-windows.zip
  build-and-release-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.29.1'
      - name: Install project dependencies
        run: flutter pub get
      - run: flutter config --enable-macos-desktop
      - run: brew install automake libtool
      - name: Build artifacts
        run: flutter build macos --release
      - name: Rename app
        working-directory: .  
        run: |
          mv build/macos/Build/Products/Release/protocentral_openview_mobile.app ./OpenView2.app
      
      # Notarization steps
      - name: Setup Xcode
        run: sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
      
      - name: Import Apple Certificate
        run: |
          # Create a temporary certificate file from base64
          echo "${{ secrets.AC_CERTIFICATE }}" | base64 --decode > certificate.p12
          
          # Create temporary keychain
          security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
          
          # Import certificate into keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.AC_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          
          # Set key partition list (required for CI/CD)
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
          
          # Verify import
          echo "=== Certificate imported successfully ==="
          security find-identity -v build.keychain
          
          # Cleanup
          rm certificate.p12
      
      - name: List Available Certificates
        run: |
          echo "=== Listing all available certificates ==="
          security find-identity -v -p codesigning
          echo ""
          echo "=== Checking keychain status ==="
          security list-keychains
      
      - name: Sign Application
        run: |
          # Find the certificate - try multiple patterns
          CERT_NAME=$(security find-identity -v -p codesigning | grep -i "developer id" | awk -F '"' '{print $2}' | head -1)
          
          if [ -z "$CERT_NAME" ]; then
            echo "Developer ID certificate not found, trying all certificates..."
            CERT_NAME=$(security find-identity -v -p codesigning | awk -F '"' '{print $2}' | grep -v "^$" | head -1)
          fi
          
          if [ -z "$CERT_NAME" ]; then
            echo "ERROR: No codesigning certificates found!"
            echo "Available identities:"
            security find-identity -v
            exit 1
          fi
          
          echo "Using certificate: $CERT_NAME"
          codesign --deep --force --verify --verbose --sign "$CERT_NAME" ./OpenView2.app
      
      - name: Create DMG
        run: |
          hdiutil create -volname "OpenView2" -srcfolder ./OpenView2.app -ov -format UDZO OpenView2.dmg
      
      - name: Notarize Application
        run: |
          xcrun notarytool submit OpenView2.dmg \
            --apple-id "${{ secrets.APPLE_ID }}" \
            --password "${{ secrets.APPLE_PASSWORD }}" \
            --team-id "${{ secrets.APPLE_TEAM_ID }}" \
            --wait
      
      - name: Staple Notarization
        run: |
          xcrun stapler staple OpenView2.dmg
      
      - name: Create Final Archive
        run: |
          zip -r OpenView2-macos.zip OpenView2.dmg
      
      - name: macOS Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: OpenView2-macos.zip
